function solution(word) {
    
    const alphabets = ['A', 'E', 'I', 'O', 'U'];
    
    let words = [];

    function makeWord(current) {
        if (current.length > 5) return; // 길이가 5를 초과하면 종료
        
        if (current.length > 0) words.push(current); // 단어를 추가
        
        for (let i = 0; i < alphabets.length; i++) {
            makeWord(current + alphabets[i]); // 재귀적으로 단어 생성
        }
    }

    makeWord('');

    words.sort(); // 단어들을 사전순으로 정렬
    return words.indexOf(word) + 1; // 인덱스를 반환 (1부터 시작)
}

// 테스트 1 〉	통과 (2.22ms, 36.2MB)
// 테스트 2 〉	통과 (2.25ms, 36.1MB)
// 테스트 3 〉	통과 (2.22ms, 36.2MB)
// 테스트 4 〉	통과 (2.38ms, 36.2MB)
// 테스트 5 〉	통과 (2.20ms, 36.2MB)
// 테스트 6 〉	통과 (3.10ms, 36.2MB)
// 테스트 7 〉	통과 (2.31ms, 36.2MB)
// 테스트 8 〉	통과 (2.22ms, 36.2MB)
// 테스트 9 〉	통과 (2.14ms, 36.2MB)
// 테스트 10 〉	통과 (2.23ms, 36.1MB)
// 테스트 11 〉	통과 (2.21ms, 36.2MB)
// 테스트 12 〉	통과 (2.53ms, 36.2MB)
// 테스트 13 〉	통과 (2.30ms, 36.2MB)
// 테스트 14 〉	통과 (2.21ms, 36.3MB)
// 테스트 15 〉	통과 (3.11ms, 36.2MB)
// 테스트 16 〉	통과 (3.30ms, 36.2MB)
// 테스트 17 〉	통과 (2.96ms, 36.2MB)
// 테스트 18 〉	통과 (2.21ms, 36.3MB)
// 테스트 19 〉	통과 (2.63ms, 36.2MB)
// 테스트 20 〉	통과 (2.40ms, 36.2MB)
// 테스트 21 〉	통과 (2.62ms, 36.3MB)
// 테스트 22 〉	통과 (2.39ms, 36.2MB)
// 테스트 23 〉	통과 (2.22ms, 36.1MB)
// 테스트 24 〉	통과 (3.19ms, 36.3MB)
// 테스트 25 〉	통과 (2.85ms, 36.1MB)
// 테스트 26 〉	통과 (2.34ms, 36.2MB)
// 테스트 27 〉	통과 (2.65ms, 36.2MB)
// 테스트 28 〉	통과 (2.52ms, 36.2MB)
// 테스트 29 〉	통과 (2.79ms, 36.1MB)
// 테스트 30 〉	통과 (2.37ms, 36.2MB)
// 테스트 31 〉	통과 (2.23ms, 36.3MB)
// 테스트 32 〉	통과 (2.24ms, 36.3MB)
// 테스트 33 〉	통과 (2.48ms, 36.3MB)
// 테스트 34 〉	통과 (2.22ms, 36.3MB)
// 테스트 35 〉	통과 (2.46ms, 36.1MB)
// 테스트 36 〉	통과 (3.53ms, 36.2MB)
// 테스트 37 〉	통과 (2.25ms, 36.2MB)
// 테스트 38 〉	통과 (2.50ms, 36.3MB)
// 테스트 39 〉	통과 (2.43ms, 36.2MB)
// 테스트 40 〉	통과 (2.29ms, 36.2MB)
// 채점 결과
// 정확성: 100.0
// 합계: 100.0 / 100.0
